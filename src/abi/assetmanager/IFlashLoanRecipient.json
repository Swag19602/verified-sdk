{
  "contractName": "IFlashLoanRecipient",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feeAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "receiveFlashLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol\":\"IFlashLoanRecipient\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xd828a935a72a6d182912abba290e4debb8c684c36fd756088f7acb30e0b2bb76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e6ac013b95e9622917c5ad388dc73f0a389a76341597731746e54547aa9de8a\",\"dweb:/ipfs/QmPB8qWcRPZaDsASgQpf5a6i2YrZ4TDV3Ebi25Mn9EAdf4\"]},\"@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x5ceb7a9b209c01659b25898622a2415414e12a7200559e57283fd511fe96c92a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://35a6ee6cb389f2675c1b64f9813862d3503524ee05067ba88172c9298d4f5e3c\",\"dweb:/ipfs/QmZGPUaoKfRigdo2U9U3695j9wX97GRSzgiK8c6zhVjjFY\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.7.0;\n\n// Inspired by Aave Protocol's IFlashLoanReceiver.\n\nimport \"@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol\";\n\ninterface IFlashLoanRecipient {\n    /**\n     * @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n     *\n     * At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n     * call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n     * Vault, or else the entire flash loan will revert.\n     *\n     * `userData` is the same value passed in the `IVault.flashLoan` call.\n     */\n    function receiveFlashLoan(\n        IERC20[] memory tokens,\n        uint256[] memory amounts,\n        uint256[] memory feeAmounts,\n        bytes memory userData\n    ) external;\n}\n",
  "sourcePath": "@balancer-labs\\v2-vault\\contracts\\interfaces\\IFlashLoanRecipient.sol",
  "ast": {
    "absolutePath": "@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol",
    "exportedSymbols": {
      "IFlashLoanRecipient": [
        6548
      ]
    },
    "id": 6549,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6531,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "688:23:29"
      },
      {
        "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
        "file": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
        "id": 6532,
        "nodeType": "ImportDirective",
        "scope": 6549,
        "sourceUnit": 6226,
        "src": "765:76:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 6548,
        "linearizedBaseContracts": [
          6548
        ],
        "name": "IFlashLoanRecipient",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 6533,
              "nodeType": "StructuredDocumentation",
              "src": "879:496:29",
              "text": " @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n Vault, or else the entire flash loan will revert.\n `userData` is the same value passed in the `IVault.flashLoan` call."
            },
            "functionSelector": "f04f2707",
            "id": 6547,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "receiveFlashLoan",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6536,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 6547,
                  "src": "1415:22:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$6225_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6534,
                      "name": "IERC20",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 6225,
                      "src": "1415:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6225",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 6535,
                    "nodeType": "ArrayTypeName",
                    "src": "1415:8:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$6225_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6539,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 6547,
                  "src": "1447:24:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6537,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1447:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6538,
                    "nodeType": "ArrayTypeName",
                    "src": "1447:9:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6542,
                  "mutability": "mutable",
                  "name": "feeAmounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 6547,
                  "src": "1481:27:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6540,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1481:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6541,
                    "nodeType": "ArrayTypeName",
                    "src": "1481:9:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6544,
                  "mutability": "mutable",
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "scope": 6547,
                  "src": "1518:21:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6543,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1518:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1405:140:29"
            },
            "returnParameters": {
              "id": 6546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1554:0:29"
            },
            "scope": 6548,
            "src": "1380:175:29",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 6549,
        "src": "843:714:29"
      }
    ],
    "src": "688:870:29"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "@balancer-labs/v2-vault/contracts/interfaces/IFlashLoanRecipient.sol",
      "exportedSymbols": {
        "IFlashLoanRecipient": [
          6548
        ]
      },
      "license": "GPL-3.0-or-later"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 6531,
        "name": "PragmaDirective",
        "src": "688:23:29"
      },
      {
        "attributes": {
          "SourceUnit": 6226,
          "absolutePath": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
          "file": "@balancer-labs/v2-solidity-utils/contracts/openzeppelin/IERC20.sol",
          "scope": 6549,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6532,
        "name": "ImportDirective",
        "src": "765:76:29"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "interface",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            6548
          ],
          "name": "IFlashLoanRecipient",
          "scope": 6549
        },
        "children": [
          {
            "attributes": {
              "functionSelector": "f04f2707",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "receiveFlashLoan",
              "scope": 6548,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n Vault, or else the entire flash loan will revert.\n `userData` is the same value passed in the `IVault.flashLoan` call."
                },
                "id": 6533,
                "name": "StructuredDocumentation",
                "src": "879:496:29"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokens",
                      "scope": 6547,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "contract IERC20[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "contract IERC20[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "IERC20",
                              "referencedDeclaration": 6225,
                              "type": "contract IERC20"
                            },
                            "id": 6534,
                            "name": "UserDefinedTypeName",
                            "src": "1415:6:29"
                          }
                        ],
                        "id": 6535,
                        "name": "ArrayTypeName",
                        "src": "1415:8:29"
                      }
                    ],
                    "id": 6536,
                    "name": "VariableDeclaration",
                    "src": "1415:22:29"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amounts",
                      "scope": 6547,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 6537,
                            "name": "ElementaryTypeName",
                            "src": "1447:7:29"
                          }
                        ],
                        "id": 6538,
                        "name": "ArrayTypeName",
                        "src": "1447:9:29"
                      }
                    ],
                    "id": 6539,
                    "name": "VariableDeclaration",
                    "src": "1447:24:29"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "feeAmounts",
                      "scope": 6547,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 6540,
                            "name": "ElementaryTypeName",
                            "src": "1481:7:29"
                          }
                        ],
                        "id": 6541,
                        "name": "ArrayTypeName",
                        "src": "1481:9:29"
                      }
                    ],
                    "id": 6542,
                    "name": "VariableDeclaration",
                    "src": "1481:27:29"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "userData",
                      "scope": 6547,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 6543,
                        "name": "ElementaryTypeName",
                        "src": "1518:5:29"
                      }
                    ],
                    "id": 6544,
                    "name": "VariableDeclaration",
                    "src": "1518:21:29"
                  }
                ],
                "id": 6545,
                "name": "ParameterList",
                "src": "1405:140:29"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6546,
                "name": "ParameterList",
                "src": "1554:0:29"
              }
            ],
            "id": 6547,
            "name": "FunctionDefinition",
            "src": "1380:175:29"
          }
        ],
        "id": 6548,
        "name": "ContractDefinition",
        "src": "843:714:29"
      }
    ],
    "id": 6549,
    "name": "SourceUnit",
    "src": "688:870:29"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-05-28T13:31:24.394Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "receiveFlashLoan(address[],uint256[],uint256[],bytes)": {
        "details": "When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}