{
  "contractName": "IKSRouter01",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountADesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBDesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2]",
          "name": "vReserveRatioBounds",
          "type": "uint256[2]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenDesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2]",
          "name": "vReserveRatioBounds",
          "type": "uint256[2]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidityETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint32[2]",
          "name": "ampBpsAndFeeBps",
          "type": "uint32[2]"
        },
        {
          "internalType": "uint256",
          "name": "amountADesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBDesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidityNewPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint32[2]",
          "name": "ampBpsAndFeeBps",
          "type": "uint32[2]"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenDesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidityNewPoolETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "poolsPath",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "path",
          "type": "address[]"
        }
      ],
      "name": "getAmountsIn",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "poolsPath",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "path",
          "type": "address[]"
        }
      ],
      "name": "getAmountsOut",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveB",
          "type": "uint256"
        }
      ],
      "name": "quote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidityETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "approveMax",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "removeLiquidityETHWithPermit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETH",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "approveMax",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "removeLiquidityWithPermit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "poolsPath",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapETHForExactTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "poolsPath",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactETHForTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "poolsPath",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForETH",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "poolsPath",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInMax",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "poolsPath",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapTokensForExactETH",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInMax",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "poolsPath",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapTokensForExactTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"vReserveRatioBounds\",\"type\":\"uint256[2]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"vReserveRatioBounds\",\"type\":\"uint256[2]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint32[2]\",\"name\":\"ampBpsAndFeeBps\",\"type\":\"uint32[2]\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityNewPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint32[2]\",\"name\":\"ampBpsAndFeeBps\",\"type\":\"uint32[2]\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityNewPoolETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"poolsPath\",\"type\":\"address[]\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"poolsPath\",\"type\":\"address[]\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"poolsPath\",\"type\":\"address[]\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"poolsPath\",\"type\":\"address[]\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"poolsPath\",\"type\":\"address[]\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"poolsPath\",\"type\":\"address[]\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"poolsPath\",\"type\":\"address[]\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"poolsPath\",\"type\":\"address[]\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"full interface for router\",\"kind\":\"dev\",\"methods\":{\"addLiquidity(address,address,address,uint256,uint256,uint256,uint256,uint256[2],address,uint256)\":{\"params\":{\"amountADesired\":\"the amount of tokenA users want to add to the pool\",\"amountAMin\":\"bounds to the extents to which amountB/amountA can go up\",\"amountBDesired\":\"the amount of tokenB users want to add to the pool\",\"amountBMin\":\"bounds to the extents to which amountB/amountA can go down\",\"deadline\":\"Unix timestamp after which the transaction will revert.\",\"pool\":\"the address of the pool\",\"to\":\"Recipient of the liquidity tokens.\",\"tokenA\":\"address of token in the pool\",\"tokenB\":\"address of token in the pool\",\"vReserveRatioBounds\":\"bounds to the extents to which vReserveB/vReserveA can go (precision: 2 ** 112)\"}},\"addLiquidityETH(address,address,uint256,uint256,uint256,uint256[2],address,uint256)\":{\"details\":\"msg.value equals to amountEthDesired\",\"params\":{\"amountETHMin\":\"bounds to the extents to which WETH/token can go down\",\"amountTokenDesired\":\"the amount of token users want to add to the pool\",\"amountTokenMin\":\"bounds to the extents to which WETH/token can go up\",\"deadline\":\"Unix timestamp after which the transaction will revert.\",\"pool\":\"the address of the pool\",\"to\":\"Recipient of the liquidity tokens.\",\"token\":\"address of token in the pool\",\"vReserveRatioBounds\":\"bounds to the extents to which vReserveB/vReserveA can go (precision: 2 ** 112)\"}},\"quote(uint256,uint256,uint256)\":{\"params\":{\"amountA\":\"amount of 1 side token added to the pool\",\"reserveA\":\"current reserve of the pool\",\"reserveB\":\"current reserve of the pool\"},\"returns\":{\"amountB\":\"amount of the other token added to the pool\"}},\"removeLiquidity(address,address,address,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountAMin\":\"the minimum token retuned after burning\",\"amountBMin\":\"the minimum token retuned after burning\",\"deadline\":\"Unix timestamp after which the transaction will revert.\",\"liquidity\":\"the amount of lp token users want to burn\",\"pool\":\"the address of the pool\",\"to\":\"Recipient of the returned tokens.\",\"tokenA\":\"address of token in the pool\",\"tokenB\":\"address of token in the pool\"}},\"removeLiquidityETH(address,address,uint256,uint256,uint256,address,uint256)\":{\"params\":{\"amountETHMin\":\"the minimum eth in wei retuned after burning\",\"amountTokenMin\":\"the minimum token retuned after burning\",\"deadline\":\"Unix timestamp after which the transaction will revert\",\"liquidity\":\"the amount of lp token users want to burn\",\"pool\":\"the address of the pool\",\"to\":\"Recipient of the returned tokens.\",\"token\":\"address of token in the pool\"}},\"removeLiquidityETHWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)\":{\"params\":{\"amountETHMin\":\"the minimum eth in wei retuned after burning\",\"amountTokenMin\":\"the minimum token retuned after burning\",\"approveMax\":\"whether users permit the router spending max lp token\",\"deadline\":\"Unix timestamp after which the transaction will revert\",\"liquidity\":\"the amount of lp token users want to burn\",\"pool\":\"the address of the pool\",\"r\":\"s v signatures of user to permit the router spending lp token.\",\"to\":\"Recipient of the returned tokens.\",\"token\":\"address of token in the pool\"}},\"removeLiquidityWithPermit(address,address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)\":{\"params\":{\"amountAMin\":\"the minimum token retuned after burning\",\"amountBMin\":\"the minimum token retuned after burning\",\"approveMax\":\"whether users permit the router spending max lp token or not.\",\"deadline\":\"Unix timestamp after which the transaction will revert.\",\"liquidity\":\"the amount of lp token users want to burn\",\"pool\":\"the address of the pool\",\"r\":\"s v Signature of user to permit the router spending lp token\",\"to\":\"Recipient of the returned tokens.\",\"tokenA\":\"address of token in the pool\",\"tokenB\":\"address of token in the pool\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/dmm/interfaces/IKSRouter01.sol\":\"IKSRouter01\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"project:/contracts/dmm/interfaces/IKSExchangeRouter.sol\":{\"keccak256\":\"0xcdc9f7f7e8ac6ce1d18b7057f213015b9091d276f1ff491df684ca4447835931\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://16baf25e12c823e215a99f1f1fa3025e080c93e4f2bbafcddfb641745987afd5\",\"dweb:/ipfs/QmNyUrQMRMBU6Vq2yWAdF8sun4ht2vi7RNmJrz7ekJGPe4\"]},\"project:/contracts/dmm/interfaces/IKSLiquidityRouter.sol\":{\"keccak256\":\"0x566a0ca890105cdf020e813b4aad1c4a61d4710aefbd4fb9bf073efa0e5b1c76\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://083bfec16d6b6ce63ec35e8dfc1e70e2abd8ec349f37243e0f178061493523a3\",\"dweb:/ipfs/QmRzk9SQ4w7cJUYHMsudz1F7VYhRpvaiUf7XJGPdpRk3g5\"]},\"project:/contracts/dmm/interfaces/IKSRouter01.sol\":{\"keccak256\":\"0xe61e01667e7e9fde47414c40703d2183e54af66a651c57ea118640267bd26aa6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://438b87e6950197a6ab03f2475c901207d39574036e7841847f2bfaa16df397be\",\"dweb:/ipfs/QmWF1jFLtkmeYEhzEujCTShe2jp7jnJF3Ud5jTra8GvdFt\"]},\"project:/contracts/dmm/interfaces/IWETH.sol\":{\"keccak256\":\"0xe7d35475ad2b2fc9abd0dfba24c92bf48f67d122e746c3cdd13da59f8d5de41e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://abbc9dfc2abe9bc5c5357177a2227750fe1c941fa4db0382480765b621e04d85\",\"dweb:/ipfs/Qme3K1mKAhzQLc8TKrE3zRZm98Szh5yC4DFV3gunESxPsh\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: BUSL-1.1\r\npragma solidity 0.6.12;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\nimport \"./IWETH.sol\";\r\nimport \"./IKSExchangeRouter.sol\";\r\nimport \"./IKSLiquidityRouter.sol\";\r\n\r\n/// @dev full interface for router\r\ninterface IKSRouter01 is IKSExchangeRouter, IKSLiquidityRouter {\r\n    function factory() external pure returns (address);\r\n\r\n    function weth() external pure returns (IWETH);\r\n}\r\n",
  "sourcePath": "D:\\Code\\kyber-verified\\contracts\\dmm\\interfaces\\IKSRouter01.sol",
  "ast": {
    "absolutePath": "project:/contracts/dmm/interfaces/IKSRouter01.sol",
    "exportedSymbols": {
      "IKSRouter01": [
        12451
      ]
    },
    "id": 12452,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12431,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:23:37"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 12432,
        "nodeType": "ImportDirective",
        "scope": 12452,
        "sourceUnit": 1119,
        "src": "65:56:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/dmm/interfaces/IWETH.sol",
        "file": "./IWETH.sol",
        "id": 12433,
        "nodeType": "ImportDirective",
        "scope": 12452,
        "sourceUnit": 12567,
        "src": "125:21:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/dmm/interfaces/IKSExchangeRouter.sol",
        "file": "./IKSExchangeRouter.sol",
        "id": 12434,
        "nodeType": "ImportDirective",
        "scope": 12452,
        "sourceUnit": 12018,
        "src": "148:33:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/dmm/interfaces/IKSLiquidityRouter.sol",
        "file": "./IKSLiquidityRouter.sol",
        "id": 12435,
        "nodeType": "ImportDirective",
        "scope": 12452,
        "sourceUnit": 12350,
        "src": "183:34:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12437,
              "name": "IKSExchangeRouter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12017,
              "src": "282:17:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IKSExchangeRouter_$12017",
                "typeString": "contract IKSExchangeRouter"
              }
            },
            "id": 12438,
            "nodeType": "InheritanceSpecifier",
            "src": "282:17:37"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12439,
              "name": "IKSLiquidityRouter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12349,
              "src": "301:18:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IKSLiquidityRouter_$12349",
                "typeString": "contract IKSLiquidityRouter"
              }
            },
            "id": 12440,
            "nodeType": "InheritanceSpecifier",
            "src": "301:18:37"
          }
        ],
        "contractDependencies": [
          12017,
          12349
        ],
        "contractKind": "interface",
        "documentation": {
          "id": 12436,
          "nodeType": "StructuredDocumentation",
          "src": "221:36:37",
          "text": "@dev full interface for router"
        },
        "fullyImplemented": false,
        "id": 12451,
        "linearizedBaseContracts": [
          12451,
          12349,
          12017
        ],
        "name": "IKSRouter01",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "functionSelector": "c45a0155",
            "id": 12445,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "factory",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "343:2:37"
            },
            "returnParameters": {
              "id": 12444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12443,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12445,
                  "src": "369:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "368:9:37"
            },
            "scope": 12451,
            "src": "327:51:37",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "3fc8cef3",
            "id": 12450,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "weth",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "399:2:37"
            },
            "returnParameters": {
              "id": 12449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12448,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12450,
                  "src": "425:5:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IWETH_$12566",
                    "typeString": "contract IWETH"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12447,
                    "name": "IWETH",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12566,
                    "src": "425:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWETH_$12566",
                      "typeString": "contract IWETH"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "424:7:37"
            },
            "scope": 12451,
            "src": "386:46:37",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 12452,
        "src": "257:178:37"
      }
    ],
    "src": "38:399:37"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/dmm/interfaces/IKSRouter01.sol",
      "exportedSymbols": {
        "IKSRouter01": [
          12451
        ]
      },
      "license": "BUSL-1.1"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.6",
            ".12"
          ]
        },
        "id": 12431,
        "name": "PragmaDirective",
        "src": "38:23:37"
      },
      {
        "attributes": {
          "SourceUnit": 1119,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "scope": 12452,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 12432,
        "name": "ImportDirective",
        "src": "65:56:37"
      },
      {
        "attributes": {
          "SourceUnit": 12567,
          "absolutePath": "project:/contracts/dmm/interfaces/IWETH.sol",
          "file": "./IWETH.sol",
          "scope": 12452,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 12433,
        "name": "ImportDirective",
        "src": "125:21:37"
      },
      {
        "attributes": {
          "SourceUnit": 12018,
          "absolutePath": "project:/contracts/dmm/interfaces/IKSExchangeRouter.sol",
          "file": "./IKSExchangeRouter.sol",
          "scope": 12452,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 12434,
        "name": "ImportDirective",
        "src": "148:33:37"
      },
      {
        "attributes": {
          "SourceUnit": 12350,
          "absolutePath": "project:/contracts/dmm/interfaces/IKSLiquidityRouter.sol",
          "file": "./IKSLiquidityRouter.sol",
          "scope": 12452,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 12435,
        "name": "ImportDirective",
        "src": "183:34:37"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            12017,
            12349
          ],
          "contractKind": "interface",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            12451,
            12349,
            12017
          ],
          "name": "IKSRouter01",
          "scope": 12452
        },
        "children": [
          {
            "attributes": {
              "text": "@dev full interface for router"
            },
            "id": 12436,
            "name": "StructuredDocumentation",
            "src": "221:36:37"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "IKSExchangeRouter",
                  "referencedDeclaration": 12017,
                  "type": "contract IKSExchangeRouter"
                },
                "id": 12437,
                "name": "UserDefinedTypeName",
                "src": "282:17:37"
              }
            ],
            "id": 12438,
            "name": "InheritanceSpecifier",
            "src": "282:17:37"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "IKSLiquidityRouter",
                  "referencedDeclaration": 12349,
                  "type": "contract IKSLiquidityRouter"
                },
                "id": 12439,
                "name": "UserDefinedTypeName",
                "src": "301:18:37"
              }
            ],
            "id": 12440,
            "name": "InheritanceSpecifier",
            "src": "301:18:37"
          },
          {
            "attributes": {
              "body": null,
              "documentation": null,
              "functionSelector": "c45a0155",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "factory",
              "overrides": null,
              "scope": 12451,
              "stateMutability": "pure",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 12441,
                "name": "ParameterList",
                "src": "343:2:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 12445,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 12442,
                        "name": "ElementaryTypeName",
                        "src": "369:7:37"
                      }
                    ],
                    "id": 12443,
                    "name": "VariableDeclaration",
                    "src": "369:7:37"
                  }
                ],
                "id": 12444,
                "name": "ParameterList",
                "src": "368:9:37"
              }
            ],
            "id": 12445,
            "name": "FunctionDefinition",
            "src": "327:51:37"
          },
          {
            "attributes": {
              "body": null,
              "documentation": null,
              "functionSelector": "3fc8cef3",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "weth",
              "overrides": null,
              "scope": 12451,
              "stateMutability": "pure",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 12446,
                "name": "ParameterList",
                "src": "399:2:37"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 12450,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IWETH",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "IWETH",
                          "referencedDeclaration": 12566,
                          "type": "contract IWETH"
                        },
                        "id": 12447,
                        "name": "UserDefinedTypeName",
                        "src": "425:5:37"
                      }
                    ],
                    "id": 12448,
                    "name": "VariableDeclaration",
                    "src": "425:5:37"
                  }
                ],
                "id": 12449,
                "name": "ParameterList",
                "src": "424:7:37"
              }
            ],
            "id": 12450,
            "name": "FunctionDefinition",
            "src": "386:46:37"
          }
        ],
        "id": 12451,
        "name": "ContractDefinition",
        "src": "257:178:37"
      }
    ],
    "id": 12452,
    "name": "SourceUnit",
    "src": "38:399:37"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-08-29T13:25:10.069Z",
  "devdoc": {
    "details": "full interface for router",
    "kind": "dev",
    "methods": {
      "addLiquidity(address,address,address,uint256,uint256,uint256,uint256,uint256[2],address,uint256)": {
        "params": {
          "amountADesired": "the amount of tokenA users want to add to the pool",
          "amountAMin": "bounds to the extents to which amountB/amountA can go up",
          "amountBDesired": "the amount of tokenB users want to add to the pool",
          "amountBMin": "bounds to the extents to which amountB/amountA can go down",
          "deadline": "Unix timestamp after which the transaction will revert.",
          "pool": "the address of the pool",
          "to": "Recipient of the liquidity tokens.",
          "tokenA": "address of token in the pool",
          "tokenB": "address of token in the pool",
          "vReserveRatioBounds": "bounds to the extents to which vReserveB/vReserveA can go (precision: 2 ** 112)"
        }
      },
      "addLiquidityETH(address,address,uint256,uint256,uint256,uint256[2],address,uint256)": {
        "details": "msg.value equals to amountEthDesired",
        "params": {
          "amountETHMin": "bounds to the extents to which WETH/token can go down",
          "amountTokenDesired": "the amount of token users want to add to the pool",
          "amountTokenMin": "bounds to the extents to which WETH/token can go up",
          "deadline": "Unix timestamp after which the transaction will revert.",
          "pool": "the address of the pool",
          "to": "Recipient of the liquidity tokens.",
          "token": "address of token in the pool",
          "vReserveRatioBounds": "bounds to the extents to which vReserveB/vReserveA can go (precision: 2 ** 112)"
        }
      },
      "quote(uint256,uint256,uint256)": {
        "params": {
          "amountA": "amount of 1 side token added to the pool",
          "reserveA": "current reserve of the pool",
          "reserveB": "current reserve of the pool"
        },
        "returns": {
          "amountB": "amount of the other token added to the pool"
        }
      },
      "removeLiquidity(address,address,address,uint256,uint256,uint256,address,uint256)": {
        "params": {
          "amountAMin": "the minimum token retuned after burning",
          "amountBMin": "the minimum token retuned after burning",
          "deadline": "Unix timestamp after which the transaction will revert.",
          "liquidity": "the amount of lp token users want to burn",
          "pool": "the address of the pool",
          "to": "Recipient of the returned tokens.",
          "tokenA": "address of token in the pool",
          "tokenB": "address of token in the pool"
        }
      },
      "removeLiquidityETH(address,address,uint256,uint256,uint256,address,uint256)": {
        "params": {
          "amountETHMin": "the minimum eth in wei retuned after burning",
          "amountTokenMin": "the minimum token retuned after burning",
          "deadline": "Unix timestamp after which the transaction will revert",
          "liquidity": "the amount of lp token users want to burn",
          "pool": "the address of the pool",
          "to": "Recipient of the returned tokens.",
          "token": "address of token in the pool"
        }
      },
      "removeLiquidityETHWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": {
        "params": {
          "amountETHMin": "the minimum eth in wei retuned after burning",
          "amountTokenMin": "the minimum token retuned after burning",
          "approveMax": "whether users permit the router spending max lp token",
          "deadline": "Unix timestamp after which the transaction will revert",
          "liquidity": "the amount of lp token users want to burn",
          "pool": "the address of the pool",
          "r": "s v signatures of user to permit the router spending lp token.",
          "to": "Recipient of the returned tokens.",
          "token": "address of token in the pool"
        }
      },
      "removeLiquidityWithPermit(address,address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": {
        "params": {
          "amountAMin": "the minimum token retuned after burning",
          "amountBMin": "the minimum token retuned after burning",
          "approveMax": "whether users permit the router spending max lp token or not.",
          "deadline": "Unix timestamp after which the transaction will revert.",
          "liquidity": "the amount of lp token users want to burn",
          "pool": "the address of the pool",
          "r": "s v Signature of user to permit the router spending lp token",
          "to": "Recipient of the returned tokens.",
          "tokenA": "address of token in the pool",
          "tokenB": "address of token in the pool"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}