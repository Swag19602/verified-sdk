/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { Contract, ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import { ContractEvent, Callback, TransactionObject, BlockType } from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export class IBaseRegistry extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  );
  clone(): IBaseRegistry;
  methods: {
    getActor(assetId: string | number[]): TransactionObject<string>;

    getEngine(assetId: string | number[]): TransactionObject<string>;

    getExtension(assetId: string | number[]): TransactionObject<string>;

    isRegistered(assetId: string | number[]): TransactionObject<boolean>;

    setActor(
      assetId: string | number[],
      actor: string
    ): TransactionObject<void>;

    setEngine(
      assetId: string | number[],
      engine: string
    ): TransactionObject<void>;

    setExtension(
      assetId: string | number[],
      extension: string
    ): TransactionObject<void>;
  };
  events: {
    allEvents: (
      options?: EventOptions,
      cb?: Callback<EventLog>
    ) => EventEmitter;
  };
}
